<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="2" ignored="0" total="8" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="LearningTestNg" duration-ms="128" started-at="2017-03-28T08:10:29Z" finished-at="2017-03-28T08:10:29Z">
    <groups>
    </groups>
    <test name="ApplicationTest" duration-ms="19" started-at="2017-03-28T08:10:29Z" finished-at="2017-03-28T08:10:29Z">
      <class name="testcases.ApplicationTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testcases.ApplicationTest@65e579dc]" name="beforeTest" is-config="true" duration-ms="0" started-at="2017-03-28T13:40:29Z" finished-at="2017-03-28T13:40:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases.ApplicationTest@65e579dc]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-03-28T13:40:29Z" finished-at="2017-03-28T13:40:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="doLogin()[pri:1, instance:testcases.ApplicationTest@65e579dc]" name="doLogin" duration-ms="0" started-at="2017-03-28T13:40:29Z" finished-at="2017-03-28T13:40:29Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping login]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping login
	at testcases.ApplicationTest.doLogin(ApplicationTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.TestNG.privateMain(TestNG.java:1442)
	at org.testng.TestNG.main(TestNG.java:1411)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.ApplicationTest@65e579dc]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-03-28T13:40:29Z" finished-at="2017-03-28T13:40:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="doPasswordChange()[pri:2, instance:testcases.ApplicationTest@65e579dc]" name="doPasswordChange" duration-ms="0" started-at="2017-03-28T13:40:29Z" depends-on-methods="testcases.ApplicationTest.doLogin" finished-at="2017-03-28T13:40:29Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method ApplicationTest.doPasswordChange()[pri:2, instance:testcases.ApplicationTest@65e579dc] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method ApplicationTest.doPasswordChange()[pri:2, instance:testcases.ApplicationTest@65e579dc] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1084)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.TestNG.privateMain(TestNG.java:1442)
	at org.testng.TestNG.main(TestNG.java:1411)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doPasswordChange -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testcases.ApplicationTest@65e579dc]" name="afterTest" is-config="true" duration-ms="1" started-at="2017-03-28T13:40:29Z" finished-at="2017-03-28T13:40:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="doLogout()[pri:3, instance:testcases.ApplicationTest@65e579dc]" name="doLogout" duration-ms="0" started-at="2017-03-28T13:40:29Z" depends-on-methods="testcases.ApplicationTest.doLogin, testcases.ApplicationTest.doPasswordChange" finished-at="2017-03-28T13:40:29Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method ApplicationTest.doLogout()[pri:3, instance:testcases.ApplicationTest@65e579dc] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method ApplicationTest.doLogout()[pri:3, instance:testcases.ApplicationTest@65e579dc] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1084)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.TestNG.privateMain(TestNG.java:1442)
	at org.testng.TestNG.main(TestNG.java:1411)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogout -->
      </class> <!-- testcases.ApplicationTest -->
    </test> <!-- ApplicationTest -->
    <test name="ParametrizationTest" duration-ms="43" started-at="2017-03-28T08:10:29Z" finished-at="2017-03-28T08:10:29Z">
      <class name="testcases.Parametrization">
        <test-method status="PASS" signature="loginTest(java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testcases.Parametrization@5fe5c6f]" name="loginTest" duration-ms="0" started-at="2017-03-28T13:40:29Z" data-provider="getData" finished-at="2017-03-28T13:40:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[u1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[a@a.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.Parametrization@5fe5c6f]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-03-28T13:40:29Z" finished-at="2017-03-28T13:40:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="loginTest(java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testcases.Parametrization@5fe5c6f]" name="loginTest" duration-ms="1" started-at="2017-03-28T13:40:29Z" data-provider="getData" finished-at="2017-03-28T13:40:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[u1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[a@a.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="loginTest(java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:testcases.Parametrization@5fe5c6f]" name="loginTest" duration-ms="0" started-at="2017-03-28T13:40:29Z" data-provider="getData" finished-at="2017-03-28T13:40:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[u1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[a@a.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.Parametrization@5fe5c6f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-03-28T13:40:29Z" finished-at="2017-03-28T13:40:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases.Parametrization@5fe5c6f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-03-28T13:40:29Z" finished-at="2017-03-28T13:40:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testcases.Parametrization -->
    </test> <!-- ParametrizationTest -->
    <test name="RegistrationTest" duration-ms="8" started-at="2017-03-28T08:10:29Z" finished-at="2017-03-28T08:10:29Z">
      <class name="testcases.ApplicationTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testcases.ApplicationTest@65e579dc]" name="beforeSuite" is-config="true" duration-ms="37" started-at="2017-03-28T13:40:29Z" finished-at="2017-03-28T13:40:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testcases.ApplicationTest@65e579dc]" name="afterSuite" is-config="true" duration-ms="0" started-at="2017-03-28T13:40:29Z" finished-at="2017-03-28T13:40:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testcases.ApplicationTest -->
      <class name="testcases.RegTest">
        <test-method status="FAIL" signature="doRegistrationTest()[pri:0, instance:testcases.RegTest@50675690]" name="doRegistrationTest" duration-ms="5" started-at="2017-03-28T13:40:29Z" finished-at="2017-03-28T13:40:29Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	Deliberately failing the test]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	Deliberately failing the test
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at testcases.RegTest.doRegistrationTest(RegTest.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.TestNG.privateMain(TestNG.java:1442)
	at org.testng.TestNG.main(TestNG.java:1411)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doRegistrationTest -->
        <test-method status="FAIL" signature="isElementPresent()[pri:0, instance:testcases.RegTest@50675690]" name="isElementPresent" duration-ms="1" started-at="2017-03-28T13:40:29Z" finished-at="2017-03-28T13:40:29Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	2 not greater than 3 expected [true] but found [false],
	2 not greater than 4 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	2 not greater than 3 expected [true] but found [false],
	2 not greater than 4 expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at testcases.RegTest.isElementPresent(RegTest.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.TestNG.privateMain(TestNG.java:1442)
	at org.testng.TestNG.main(TestNG.java:1411)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isElementPresent -->
      </class> <!-- testcases.RegTest -->
    </test> <!-- RegistrationTest -->
  </suite> <!-- LearningTestNg -->
</testng-results>
